package mockitoCourse;

import static org.mockito.BDDMockito.given;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;
import org.mockito.Mockito;

import junit.framework.Assert;
import mockitoCourse.business.TodoBusinessImpl;

public class TodoBusinessImplMockitoTest {

	@Test
	public void testTodoBusinessImplMockitoTest_Mockito() {
		TodoService todoServiceMock= mock(TodoService.class);
		List<String> todos= Arrays.asList("Learn Spring MVC",
				"Learn Spring", "Learn to Dance");
		when(todoServiceMock.retrieveTodos("sai")).thenReturn(todos);
		
		TodoBusinessImpl todobusinessImpl= new TodoBusinessImpl(todoServiceMock);
		List<String> todosRelatedToSpring = todobusinessImpl.retrieveTodosRelatedToSpring("sai");
		Assert.assertEquals(3, todosRelatedToSpring.size());
	}
	
	@Test
	public void testDeleteTodoList_MockitoBDDStyle() {
		//Given
		TodoService todoServiceMock= mock(TodoService.class);
		List<String> todos= Arrays.asList("Learn Spring MVC",
				"Learn Spring", "Learn to Dance");
		given(todoServiceMock.retrieveTodos("sai")).willReturn(todos);
		TodoBusinessImpl todobusinessImpl= new TodoBusinessImpl(todoServiceMock);
		
		//When
		todobusinessImpl.deleteTodosNotRelatedToSpring("sai");
		//List<Sring> todosRelatedToSpring = todobusinessImpl.retrieveTodosRelatedToSpring("sai");
		
		//Then
		verify(todoServiceMock).deleteTodo("Learn to Dance");
		
		verify(todoServiceMock,
				Mockito.never()).deleteTodo("Learn to ance");
		
		
		//Assert.assertEquals(3, todosRelatedToSpring.size());
	}
	
	

}
